saran@LAPTOP-SMLPNVGL MINGW64 ~
$ cd ~/GitDemo

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git checkout master
Already on 'master'
Your branch is up to date with 'origin/master'.

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git checkout -b GitWork
Switched to a new branch 'GitWork'

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (GitWork)
$ cat > hello.xml <<'EOF'
<?xml version="1.0"?>
<!-- hello.xml from GitWork branch -->
<message>This is content from GitWork branch</message>
EOF

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (GitWork)
$ git add hello.xml
warning: in the working copy of 'hello.xml', LF will be replaced by CRLF the nex

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (GitWork)
$ git commit -m "Add hello.xml on GitWork (branch version)"
[GitWork e2a8818] Add hello.xml on GitWork (branch version)
 1 file changed, 3 insertions(+)
 create mode 100644 hello.xml

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (GitWork)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ cat > hello.xml <<'EOF'
<?xml version="1.0"?>
<!-- hello.xml from master -->
<message>This is content from master branch</message>
EOF

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git add hello.xml
warning: in the working copy of 'hello.xml', LF will be replaced by CRLF the nex

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git commit -m "Add hello.xml on master (master version)"
[master ab0a415] Add hello.xml on master (master version)
 1 file changed, 3 insertions(+)
 create mode 100644 hello.xml

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git log --oneline --graph --decorate --all
* ab0a415 (HEAD -> master) Add hello.xml on master (master version)
| * e2a8818 (GitWork) Add hello.xml on GitWork (branch version)
|/
* e843e99 (origin/master) Add feature.txt and update welcome.txt (work on GitNew
* 9b9db05 Added .gitignore to exclude .log files and log folder
* 9334396 Initial commit - added welcome.txt

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git diff --name-only master..GitWork
hello.xml

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git diff master..GitWork -- hello.xml
diff --git a/hello.xml b/hello.xml
index 73ad326..461beb2 100644
--- a/hello.xml
+++ b/hello.xml
@@ -1,3 +1,3 @@
 <?xml version="1.0"?>
-<!-- hello.xml from master -->
-<message>This is content from master branch</message>
+<!-- hello.xml from GitWork branch -->
+<message>This is content from GitWork branch</message>

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git difftool -y master..GitWork -- hello.xml

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git merge GitWork
Auto-merging hello.xml
CONFLICT (add/add): Merge conflict in hello.xml
Automatic merge failed; fix conflicts and then commit the result.

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master|MERGING)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both added:      hello.xml

no changes added to commit (use "git add" and/or "git commit -a")

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master|MERGING)
$ git mergetool
Merging:
hello.xml

Normal merge conflict for 'hello.xml':
  {local}: created file
  {remote}: created file

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master|MERGING)
$ git add hello.xml

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master|MERGING)
$ git commit -m "Resolve merge conflict for hello.xml (merge GitWork into master
[master 20108a6] Resolve merge conflict for hello.xml (merge GitWork into master

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 3 commits.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello.xml.orig

nothing added to commit but untracked files present (use "git add" to track)

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ cp hello.xml hello.xml.bak

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ echo "hello.xml.bak" >> .gitignore

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git add .gitignore
warning: in the working copy of '.gitignore', LF will be replaced by CRLF the next time Git touches it

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git commit -m "Add backup pattern to .gitignore"
[master 61d56c2] Add backup pattern to .gitignore
 1 file changed, 1 insertion(+)

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git branch -a
  GitWork
* master
  remotes/origin/master

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git branch -d GitWork
Deleted branch GitWork (was e2a8818).

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git log --oneline --graph --decorate
* 61d56c2 (HEAD -> master) Add backup pattern to .gitignore
*   20108a6 Resolve merge conflict for hello.xml (merge GitWork into master)
|\
| * e2a8818 Add hello.xml on GitWork (branch version)
* | ab0a415 Add hello.xml on master (master version)
|/
* e843e99 (origin/master) Add feature.txt and update welcome.txt (work on GitNewBranch)
* 9b9db05 Added .gitignore to exclude .log files and log folder
* 9334396 Initial commit - added welcome.txt

saran@LAPTOP-SMLPNVGL MINGW64 ~/GitDemo (master)
$ git push origin master
Enumerating objects: 14, done.
Counting objects: 100% (14/14), done.
Delta compression using up to 12 threads
Compressing objects: 100% (11/11), done.
Writing objects: 100% (12/12), 1.23 KiB | 420.00 KiB/s, done.
Total 12 (delta 6), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (6/6), completed with 1 local object.
To https://github.com/SaranSelva18/GitDemo.git
   e843e99..61d56c2  master -> master


